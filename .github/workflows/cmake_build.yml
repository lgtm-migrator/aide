name: CI

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-10.15]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Install dependencies
      run: |
        pip3 install wheel setuptools
        pip3 install --upgrade -r requirements.txt
        mkdir build

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      if: matrix.os == 'ubuntu-latest'
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Install Qt
      if: matrix.os == 'macos-10.15'
      run: |
        brew install qt5

    - name: Build the project
      if: matrix.os == 'ubuntu-latest'
      working-directory: build
      run: |
        cmake -DUNIT_TESTS_RUN_ON_CI=1 ..
        cmake --build . --config Release -j 4

    - name: Build the project
      if: matrix.os == 'macos-10.15'
      working-directory: build
      run: |
        cmake -DUNIT_TESTS_RUN_ON_CI=0 -DQt5_DIR=$(brew --prefix qt5)/lib/cmake/Qt5 -DQt5LinguistTools_DIR=$(brew --prefix qt5)/lib/cmake/Qt5LinguistTools -DQt5Test_DIR=$(brew --prefix qt5)/lib/cmake/Qt5Test ..
        cmake --build . --config Release -j 4

    - name: Test the project
      uses: GabrielBB/xvfb-action@v1
      with:
        working-directory: build
        run: ctest

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test_results
        path: build/**/*.xml



  publish-test-results:
    name: "Publish Unit Test Results"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          hide_comments: all but latest
          comment_on_pr: true
          files: artifacts/test_results/tests/ut/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false

