language: cpp

before_cache:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew cleanup; fi

cache:
  - pip
  - ccache
  - directories:
    - $HOME/.conan
    - $HOME/Library/Caches/Homebrew

addons:
  apt:
    packages: &common_packages
      - doxygen
      - graphviz
      - lcov

matrix:
  fast_finish: true
  include:

    ##########################################################################
    # Clang on OSX
    ##########################################################################

    # XCode 9.4
    - env: COMPILER=clang++ BUILD_TYPE=Debug COVERAGE=OFF
      os: osx
      osx_image: xcode9.4
      compiler: clang
      addons:
        homebrew:
          update: true
          packages:
            - *common_packages
            - qt

    - env: COMPILER=clang++ BUILD_TYPE=Release COVERAGE=OFF
      os: osx
      osx_image: xcode9.4
      compiler: clang
      addons:
        homebrew:
          update: true
          packages:
            - *common_packages
            - qt

    # XCode 11
    - env: COMPILER=clang++ BUILD_TYPE=Debug COVERAGE=OFF
      os: osx
      osx_image: xcode11
      compiler: clang
      addons:
        homebrew:
          packages:
            - *common_packages
            - qt

    - env: COMPILER=clang++ BUILD_TYPE=Release COVERAGE=OFF
      os: osx
      osx_image: xcode11
      compiler: clang
      addons:
        homebrew:
          packages:
            - *common_packages
            - qt

    ##########################################################################
    # Clang on Linux
    ##########################################################################
    - env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
        - BUILD_TYPE=Debug
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: xenial
      name: "Clang Xenial Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - clang-9
            - g++-7

    - env:
        - MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: xenial
      name: "Clang Xenial Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - clang-9
            - g++-7

    - env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=Debug
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=ON
      os: linux
      dist: bionic
      name: "Clang Bionic Debug"
      addons:
        apt:
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - qttools5-dev

    - env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=ON
      os: linux
      dist: bionic
      name: "Clang Bionic Release"
      addons:
        apt:
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - qttools5-dev

    - env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=ON
      os: linux
      dist: focal
      name: "Clang Focal Release"
      addons:
        apt:
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - qttools5-dev

    ##########################################################################
    # GCC on Linux
    ##########################################################################
    - env:
        - MATRIX_EVAL="CC=gcc && CXX=g++-7"
        - BUILD_TYPE=Debug
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: xenial
      compiler: gcc
      name: "GCC Xenial Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - g++-7

    - env:
        - MATRIX_EVAL="CC=gcc && CXX=g++-7"
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: xenial
      compiler: gcc
      name: "GCC Xenial Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - g++-7

    - env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
        - BUILD_TYPE=Debug
        - COVERAGE=ON
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: bionic
      compiler: gcc
      name: "GCC Bionic Debug"
      addons:
        apt:
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - qttools5-dev

    - env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - BUILD_SHARED_LIBS=OFF
      os: linux
      dist: bionic
      compiler: gcc
      name: "GCC Bionic Release"
      addons:
        apt:
          packages:
            - *common_packages
            - qt5-default
            - qttools5-dev-tools
            - qttools5-dev

install:
  - JOBS=2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      pip install --user -r requirements.txt
      wget -O cmake.sh https://cmake.org/files/v3.15/cmake-3.15.7-Linux-x86_64.sh
      sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
      export PATH=/usr/local/bin:${PATH}
    else
      python -m pip install --upgrade pip3
      pip3 install -r requirements.txt
      brew install cmake || brew upgrade cmake
      QT5_CMAKE_PREFIX=/usr/local/opt/qt/lib/cmake/Qt5
      QT5_LINGUIST_CMAKE_PREFIX=/usr/local/opt/qt/lib/cmake/Qt5LinguistTools
      export QT5_CMAKE_PREFIX
      export QT5_LINGUIST_CMAKE_PREFIX
    fi
  - cmake --version
  - export COVERAGE
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - echo "Building $BUILD_TYPE with QT prefix $QT5_CMAKE_PREFIX - Coverage is $COVERAGE"
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_COVERAGE=$COVERAGE -DQt5_DIR=$QT5_CMAKE_PREFIX -DQt5LinguistTools_DIR=$QT5_LINGUIST_CMAKE_PREFIX -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS
  - cmake --build . -- -j 2

  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8; ctest )& fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then (CTEST_OUTPUT_ON_FAILURE=1 xvfb-run ctest) fi

after_success:
    # Creating report
  - |
    if [[ "${COVERAGE}" == "ON" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --gcov-tool gcov-7 --directory . --capture --output-file coverage.info # capture coverage info
      lcov --gcov-tool gcov-7 --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
      lcov --gcov-tool gcov-7 --list coverage.info #debug info
      # Uploading report to CodeCov
      bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    fi
